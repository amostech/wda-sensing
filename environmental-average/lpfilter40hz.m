function y = lpfilter40hz(x)
%LPFILTER-40HZ Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.0 and the DSP System Toolbox 9.2.
% Generated on: 25-Nov-2016 21:42:35

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % Equiripple Lowpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 100;  % Sampling Frequency
    %
    % Fpass = 40;              % Passband Frequency
    % Fstop = 50;              % Stopband Frequency
    % Dpass = 0.057501127785;  % Passband Ripple
    % Dstop = 0.0001;          % Stopband Attenuation
    % dens  = 20;              % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fpass, Fstop]/(Fs/2), [1 0], [Dpass, Dstop]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [0.000197999599698462 -0.000633057447595542 ...
        0.00156809777765466 -0.00330471068392321 0.00625423772990636 ...
        -0.0109528886517173 0.0181139170734544 -0.0287619766983574 ...
        0.0445923142478951 -0.0690079553590473 0.11072237808372 ...
        -0.201850761588119 0.633099663436237 0.633099663436237 ...
        -0.201850761588119 0.11072237808372 -0.0690079553590473 ...
        0.0445923142478951 -0.0287619766983574 0.0181139170734544 ...
        -0.0109528886517173 0.00625423772990636 -0.00330471068392321 ...
        0.00156809777765466 -0.000633057447595542 0.000197999599698462]);
end

y = step(Hd,x);


% [EOF]
