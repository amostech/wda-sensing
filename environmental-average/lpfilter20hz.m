function y = lpfilter20hz(x)
%LPFILTER20HZ Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.0 and the DSP System Toolbox 9.2.
% Generated on: 25-Nov-2016 22:18:54

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % Equiripple Lowpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 100;  % Sampling Frequency
    %
    % Fpass = 20;              % Passband Frequency
    % Fstop = 30;              % Stopband Frequency
    % Dpass = 0.057501127785;  % Passband Ripple
    % Dstop = 0.0001;          % Stopband Attenuation
    % dens  = 20;              % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fpass, Fstop]/(Fs/2), [1 0], [Dpass, Dstop]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [0.00149877197198623 0.00908415081533002 ...
        0.0204397024737571 0.0177871339540238 -0.00876649432087159 ...
        -0.027047927230246 0.00301483598318382 0.0453564257965458 ...
        0.0118610026472114 -0.0777999049688654 -0.0543496128856908 ...
        0.172588799779655 0.419863104707615 0.419863104707615 0.172588799779655 ...
        -0.0543496128856908 -0.0777999049688654 0.0118610026472114 ...
        0.0453564257965458 0.00301483598318382 -0.027047927230246 ...
        -0.00876649432087159 0.0177871339540238 0.0204397024737571 ...
        0.00908415081533002 0.00149877197198623]);
end

y = step(Hd,x);


% [EOF]
