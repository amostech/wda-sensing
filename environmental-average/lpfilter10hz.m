function y = lpfilter10hz(x)
%LPFILTER10HZ Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.0 and the DSP System Toolbox 9.2.
% Generated on: 25-Nov-2016 22:25:26

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % Equiripple Lowpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 100;  % Sampling Frequency
    %
    % Fpass = 10;              % Passband Frequency
    % Fstop = 20;              % Stopband Frequency
    % Dpass = 0.057501127785;  % Passband Ripple
    % Dstop = 0.0001;          % Stopband Attenuation
    % dens  = 20;              % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fpass, Fstop]/(Fs/2), [1 0], [Dpass, Dstop]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [0.000921992213781246 0.00335702792571534 ...
        0.00666846411080491 0.00755286336642893 0.00103278035537582 ...
        -0.0154786656220236 -0.0369577564468621 -0.0489939394790694 ...
        -0.0332613413754055 0.0208964377504099 0.105771877241975 ...
        0.194080920241419 0.250550621094879 0.250550621094879 0.194080920241419 ...
        0.105771877241975 0.0208964377504099 -0.0332613413754055 ...
        -0.0489939394790694 -0.0369577564468621 -0.0154786656220236 ...
        0.00103278035537582 0.00755286336642893 0.00666846411080491 ...
        0.00335702792571534 0.000921992213781246]);
end

y = step(Hd,x);


% [EOF]
